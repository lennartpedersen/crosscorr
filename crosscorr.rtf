{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red34\green139\blue34;\red0\green0\blue255;\red160\green32\blue240;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs20 \cf2 % calculate cross correlations
\fs24 \cf0 \

\fs20 \cf2 %
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 function\cf0  [lag, R_xy, P_xy, n,Sig_xy] = cross_corr(x, y, nlags, bad_flag)
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 %
\fs24 \cf0 \

\fs20 \cf2 % input:
\fs24 \cf0 \

\fs20 \cf2 %       x,y the data sets
\fs24 \cf0 \

\fs20 \cf2 %       nlags are number of lags to process
\fs24 \cf0 \

\fs20 \cf2 %       bad_flag is data value that indicates missing or bad data
\fs24 \cf0 \

\fs20 \cf2 %
\fs24 \cf0 \

\fs20 \cf2 % output:
\fs24 \cf0 \

\fs20 \cf2 %       lag is lag from -nlag to +nlag
\fs24 \cf0 \

\fs20 \cf2 %       R_xy are covariances.  
\fs24 \cf0 \

\fs20 \cf2 %       P_xy are correlations
\fs24 \cf0 \

\fs20 \cf2 %       n is array containing the number of data points used to 
\fs24 \cf0 \

\fs20 \cf2 %        calculate each R
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % put in column format
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 x=x(:);
\fs24 \

\fs20 y=y(:);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % this many data points
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 N=length(x);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % initialize output 
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 R_xy = zeros(2*nlags+1,1);
\fs24 \

\fs20 P_xy = zeros(2*nlags+1,1);
\fs24 \

\fs20 Sig_xy = zeros(2*nlags+1,1);
\fs24 \

\fs20  
\fs24 \

\fs20 n = zeros(2*nlags+1,1);
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % check that y is same length
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 if\cf0  (length(y)~=N)
\fs24 \

\fs20     fprintf(\cf4 'x and y different lengths\\n'\cf0 )
\fs24 \

\fs20     \cf3 return\cf0 ;
\fs24 \

\fs20 \cf3 end
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % find means
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 if\cf0 (isnan(bad_flag))
\fs24 \

\fs20     bad_flag=1e35;
\fs24 \

\fs20     id = find(isnan(x));
\fs24 \

\fs20     x(id) = bad_flag+0*id;
\fs24 \

\fs20     id = find(isnan(y));
\fs24 \

\fs20     y(id) = bad_flag+0*id;
\fs24 \

\fs20 \cf3 end
\fs24 \cf0 \

\fs20 good_id = find(x~=bad_flag);
\fs24 \

\fs20 \cf3 if\cf0 (length(good_id)>0)
\fs24 \

\fs20     mean_x = mean(x(good_id));
\fs24 \

\fs20 \cf3 else
\fs24 \cf0 \

\fs20     fprintf(\cf4 'no data found\\n'\cf0 )
\fs24 \

\fs20     \cf3 return\cf0 ;
\fs24 \

\fs20 \cf3 end
\fs24 \cf0 \

\fs20 good_id = find(y~=bad_flag);
\fs24 \

\fs20 \cf3 if\cf0 (length(good_id)>0) 
\fs24 \

\fs20     mean_y = mean(y(good_id));
\fs24 \

\fs20 \cf3 else\cf0  
\fs24 \

\fs20     fprintf(\cf4 'no data found\\n'\cf0 ) 
\fs24 \

\fs20     \cf3 return\cf0 ; 
\fs24 \

\fs20 \cf3 end
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % do the lags
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 cnt = 0;
\fs24 \

\fs20 \cf3 for\cf0  l=-nlags:1:nlags,
\fs24 \

\fs20     cnt = cnt + 1;
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % check for neg./pos lag
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0     \cf3 if\cf0  (l<0)
\fs24 \

\fs20         k=(-1)*l;
\fs24 \

\fs20         lag2_id = [1:1:(N-k)]';
\fs24 \

\fs20         lag1_id = lag2_id+k;
\fs24 \

\fs20  
\fs24 \

\fs20     \cf3 else
\fs24 \cf0 \

\fs20         k=l;
\fs24 \

\fs20         lag1_id = [1:1:(N-k)]';
\fs24 \

\fs20         lag2_id = lag1_id+k;
\fs24 \

\fs20     \cf3 end
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % find good data in x series
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0     good_id = find( (x(lag1_id)~=bad_flag) );
\fs24 \

\fs20     Ngoodx = length(good_id);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % continue with this lag if there are data
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0     \cf3 if\cf0  (Ngoodx>0)
\fs24 \

\fs20         lag1_id = lag1_id(good_id);
\fs24 \

\fs20         lag2_id = lag2_id(good_id);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % find good data in y-series where x series was good
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0         good_id = find( (y(lag2_id)~=bad_flag) );
\fs24 \

\fs20         Ngood = length(good_id);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % continue only if there are data
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0         \cf3 if\cf0  (Ngood>0)
\fs24 \

\fs20             n(cnt) = Ngood;
\fs24 \

\fs20             lag1_id = lag1_id(good_id);
\fs24 \

\fs20             lag2_id = lag2_id(good_id);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % calculate statistics
\fs24 \cf0 \

\fs20 \cf2 % dudley's method
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 if\cf0  (1)
\fs24 \

\fs20     mean_1 = mean(x(lag1_id));
\fs24 \

\fs20     mean_2 = mean(y(lag2_id));
\fs24 \

\fs20     z1=x(lag1_id)-mean_1;
\fs24 \

\fs20     z2=y(lag2_id)-mean_2;
\fs24 \

\fs20 \cf3 end
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % nathaniel's method
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 if\cf0  (0)
\fs24 \

\fs20     z1=x(lag1_id)-mean_x;
\fs24 \

\fs20     z2=y(lag2_id)-mean_y;
\fs24 \

\fs20 \cf3 end
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % get the normalizing variances
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0             std_1 = sqrt(z1'*z1/Ngood );
\fs24 \

\fs20             std_2 = sqrt(z2'*z2/Ngood);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % estimate cov. and corr.
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0             R_xy(cnt) = z1'*z2/Ngood; \cf2 % Equation 6.2.78
\fs24 \cf0 \

\fs20             P_xy(cnt) = R_xy(cnt)/(std_1*std_2);\cf2 % Equation 6.2.82
\fs24 \cf0 \

\fs20             
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 % use matlab function to get P values
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 [R,P]= corrcoef(z1,z2);
\fs24 \

\fs20             Sig_xy(cnt)=P(1,2);
\fs24 \

\fs20             
\fs24 \

\fs20     \cf3 end\cf0  \cf2 % check for good x -data
\fs24 \cf0 \

\fs20     \cf3 end\cf0  \cf2 % check for good y -data
\fs24 \cf0 \

\fs20 \cf3 end\cf0  \cf2 % all lags
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % reproduce lags
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 lag = [-nlags:1:nlags]';
\fs24 \
\
}